function [y] = FOC_FD(x,kDC,a)
%FINE_FOC 精细频偏补偿函数
% 本函数通过数据辅助的频域互相关方法实现高精度频率偏移补偿
% 主要功能：
%   1. 基于训练序列的频偏搜索
%   2. 多通道互相关峰值检测
%   3. 频偏相位补偿与直流消除
% 输入参数：
%   x           - 接收信号矩阵（列向量为不同通道，2倍过采样）
%   Parameters  - 参数结构体（包含kDC等参数）
%   a           - 发送的已知训练序列
% 输出参数：
%   y           - 频偏补偿后的信号（保持2SPS）

%% ========================== 参数提取 ================================
% kDC  = Parameters.kDC;  % DC消除的滑动窗口长度（样本数）



%% ========================== 预处理准备 ==============================
Lf = size(a,1);        % 训练序列长度（符号数）
a2  = rectpulse(a,2);   % 2倍上采样发送序列（匹配接收信号的2SPS）
xt = x(1:2*Lf,:);      % 截取接收信号前2Lf个样本（与训练序列对齐）

%% ========================== 频偏搜索参数 ============================
Df = 0.2;    % 归一化频率搜索范围（±20%采样率）
Nf = 10000;  % 频偏测试点数
test_f0 = linspace(-Df,Df,Nf); % 生成线性间隔的测试频率向量

%% ========================== 粗频偏搜索 ==============================
Peaks = NaN(Nf,1); % 预存储互相关峰值
for n = 1:Nf       % 遍历所有测试频率
    % 计算当前频率下的互相关峰值
    Peaks(n) = FindPeakCorr(Lf,test_f0(n),xt,a2);
end
[~,idx] = max(Peaks);          % 找到最大峰值对应的索引
f0_fine = test_f0(idx);        % 获取最佳频偏估计值

%% ========================== 频偏补偿应用 ============================
% 生成相位旋转向量（时间轴×频偏）
ph = 2*pi*f0_fine.*repmat((0:size(x,1)-1)',1,size(x,2));
% 应用频偏补偿（复数指数旋转）
y = x.*exp(-1j*ph); 

%% ========================== DC成分消除 ==============================
% 滑动平均法去除直流偏移
y = y - movmean(y,kDC,1);

% 显示估计的归一化频偏
fprintf('估计的归一化频偏：%d\n',f0_fine);
end

%% ====================== 辅助函数1：互相关峰值检测 ======================
function peak_xc=FindPeakCorr(Lf,f0,x,a)
% 计算特定频偏下的多通道互相关峰值
% 输入：
%   Lf - 训练序列长度
%   f0 - 测试频偏（归一化频率）
%   x  - 接收信号片段（2Lf×Nrx）
%   a  - 上采样后的训练序列（2Lf×Ntx）
% 输出：
%   peak_xc - 最大互相关峰值

Nrx = size(x,2);   % 接收通道数
Ntx = size(a,2);   % 发射通道数
xc = NaN(2*Lf,Nrx*Ntx); % 预分配互相关矩阵

% 多通道互相关计算
for n = 1:Ntx              % 遍历发射通道
    an = a(:,n);           % 获取当前发射通道训练序列
    an = an - mean(an);    % 去除直流分量
    
    for m = 1:Nrx          % 遍历接收通道
        rm = x(:,m);       % 获取当前接收通道信号
        % 应用测试频偏补偿
        rm = rm .* exp(-2j*pi*f0.*(0:2*Lf-1)'); 
        rm = rm - mean(rm);% 去除直流分量
        
        % 计算快速互相关
        xc(:,(n-1)*Ntx+m) = corrx(an,rm);
    end
end

% 多通道结果叠加并寻找峰值
xc = abs(sum(xc,2));       % 列方向求和
[peak_xc,~] = max(xc);     % 获取最大峰值
end

%% ====================== 辅助函数2：快速互相关计算 ======================
function y = corrx(x,h)
% 基于FFT的快速互相关计算
% 输入：
%   x - 参考信号（发送序列）
%   h - 目标信号（接收信号）
% 输出：
%   y - 互相关结果

N = max(size(x,1),size(h,1)); % 确定FFT计算长度
% 频域相乘+逆变换实现快速相关
y = ifft(fft(x,N) .* fft(flip(conj(h),1),N)); 
end
